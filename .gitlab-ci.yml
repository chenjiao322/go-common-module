stages:
  - unit_test
  - sonar

# 普通提交  unitTest -> sonarqube-check
# 版本发布  unitTest -> sonarqube-check -> build -> upload -> release_tag

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod

unit_test:
  image: golang:1.18
  stage: unit_test
  extends: .go-cache
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  script:
    - go env -w GOPROXY="https://goproxy.cn,direct"
    - go env -w CGO_ENABLED=1
    - go env -w GO111MODULE=on
    - go env -w GOPRIVATE="gitlab.geinc.cn"
    - mkdir report
    - go mod tidy
    - go test -v ./... -coverprofile=report/coverage.out -json > report/ut.out
  tags:
    - go
  only:
    - master

sonarqube-check:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - ls report
    - sonar-scanner
  allow_failure: true
  only:
    - master # or the name of your main branch